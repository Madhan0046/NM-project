import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset
df = pd.read_excel("ENB2012_data.xlsx")

# Features: 8 building attributes
X = df.iloc[:, 0:8].values

# Targets: Heating Load (y1), Cooling Load (y2)
y1 = df.iloc[:, 8].values  # Heating Load
y2 = df.iloc[:, 9].values  # Cooling Load

# Train/Test Split
X_train, X_test, y1_train, y1_test = train_test_split(X, y1, test_size=0.2, random_state=42)
_, _, y2_train, y2_test = train_test_split(X, y2, test_size=0.2, random_state=42)

# Feature Scaling
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Train Random Forest Regressors
model_y1 = RandomForestRegressor(n_estimators=100, random_state=42)
model_y2 = RandomForestRegressor(n_estimators=100, random_state=42)

model_y1.fit(X_train, y1_train)
model_y2.fit(X_train, y2_train)

# Predict
y1_pred = model_y1.predict(X_test)
y2_pred = model_y2.predict(X_test)

# Evaluation
print("Heating Load Prediction")
print("MSE:", mean_squared_error(y1_test, y1_pred))
print("R2 Score:", r2_score(y1_test, y1_pred))

print("\nCooling Load Prediction")
print("MSE:", mean_squared_error(y2_test, y2_pred))
print("R2 Score:", r2_score(y2_test, y2_pred))

# Plot Predictions
plt.figure(figsize=(10, 4))

plt.subplot(1, 2, 1)
plt.scatter(y1_test, y1_pred, alpha=0.7)
plt.xlabel("Actual HL")
plt.ylabel("Predicted HL")
plt.title("Heating Load Prediction")

plt.subplot(1, 2, 2)
plt.scatter(y2_test, y2_pred, alpha=0.7)
plt.xlabel("Actual CL")
plt.ylabel("Predicted CL")
plt.title("Cooling Load Prediction")

plt.tight_layout()
plt.show()
